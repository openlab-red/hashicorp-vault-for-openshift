apiVersion: redhatcop.redhat.io/v1alpha1
kind: AuthEngineMount
metadata:
  name: team-one
  annotations:
    argocd.argoproj.io/sync-wave: "-7"
spec:
  authentication:
    path: kubernetes
    role: vault-admin
    serviceAccount:
      name: controller-manager
  type: kubernetes
  path: app-kubernetes
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: KubernetesAuthEngineConfig
metadata:
  name: team-one
  annotations:
    argocd.argoproj.io/sync-wave: "-6"
spec:
  authentication:
    path: kubernetes
    role: vault-admin
    serviceAccount:
      name: controller-manager
  tokenReviewerServiceAccount:
    name: controller-manager
  path: app-kubernetes
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: KubernetesAuthEngineRole
metadata:
  name: team-one
  annotations:
    argocd.argoproj.io/sync-wave: "-7"
spec:
  authentication:
    path: kubernetes
    role: vault-admin
    serviceAccount:
      name: controller-manager
  path: app-kubernetes/team-one
  policies:
  - team-one-pki-engine
  targetServiceAccounts:
  - default
  targetNamespaces:
    targetNamespaces:
    - team-one
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: Policy
metadata:
  name: team-one-pki-engine
spec:
  authentication:
    path: kubernetes
    role: vault-admin
    serviceAccount:
      name: controller-manager
  policy: |
    # query existing mounts
    path "/sys/mounts" {
      capabilities = [ "list", "read"]
      allowed_parameters = {
        "type" = ["pki"]
        "*"   = []
      }
    }

    # mount pki secret engines
    path "/sys/mounts/app-pki/team-one*" {
      capabilities = ["create", "read", "update", "delete", "list"]
    }

    # tune
    path "/sys/mounts/app-pki/team-one/tune" {
      capabilities = ["create", "read", "update", "delete", "list"]
    }

    # internal sign pki
    path "pki/intermediate/root/sign-intermediate" {
      capabilities = ["create"]
    }

    # pki 
    path "app-pki/team-one*" {
      capabilities = ["create", "read", "update", "delete", "list"]
    }
