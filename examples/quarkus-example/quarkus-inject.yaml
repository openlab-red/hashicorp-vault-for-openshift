---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: quarkus-example
    app.kubernetes.io/name: quarkus-example
  name: quarkus-example
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: quarkus-example
---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/instance: quarkus-example
    app.kubernetes.io/name: quarkus-example
  name: quarkus-example
spec:
  to:
    kind: Service
    name: quarkus-example
---

apiVersion: v1
kind: DeploymentConfig
metadata:
  name: quarkus-example
  labels:
    app.kubernetes.io/instance: quarkus-example
    app.kubernetes.io/name: quarkus-example
spec:
  triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - quarkus-example
        from:
          kind: ImageStreamTag
          name: 'quarkus-example:latest'
  replicas: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/ca-key: '/var/run/secrets/kubernetes.io/serviceaccount/ca-bundle/service-ca.crt'
        vault.hashicorp.com/agent-inject-secret-application.properties: secret/example
        vault.hashicorp.com/secret-volume-path: /deployments/config
        vault.hashicorp.com/agent-inject-template-application.properties: |
          {{- with secret "secret/example" -}}
          secret.example.password = {{ .Data.password }}
          {{- end }}
        vault.hashicorp.com/role: example
      labels:
        app: quarkus-example       
    spec:
      containers:
        - name: quarkus-example
          image: "quarkus-example:latest"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 3
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount/ca-bundle
            name: vault-cabundle
      volumes:
      - configMap:
          name: vault-agent-cabundle
        name: vault-cabundle

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: vault-agent-cabundle
  labels:
    app.kubernetes.io/instance: vault-agent
    app.kubernetes.io/name: vault-agent
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
data: {}